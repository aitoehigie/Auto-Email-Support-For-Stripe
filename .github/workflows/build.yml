name: Package Project

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  package:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grants permission to create/update releases
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Create version file
      run: |
        echo "$(date +'%Y%m%d')-$(git rev-parse --short HEAD)" > version.txt
        echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
    
    - name: Install zip utility
      run: |
        sudo apt-get update
        sudo apt-get install -y zip
    
    - name: Create project package
      run: |
        zip -r hunchbank-project-${{ env.VERSION }}.zip . -x "*.git*" "*.github*" "*.gitignore" "*.DS_Store"
    
    - name: Delete existing 'latest' release if it exists
      run: |
        # Get the release ID for 'latest' tag, if it exists
        RELEASE_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/releases/tags/latest | jq -r '.id // ""')
        if [ -n "$RELEASE_ID" ]; then
          curl -s -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID
        fi
    
    - name: Create Release and Upload Artifact
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "latest"
        name: "Latest Build"
        body: "Auto-generated build from ${{ github.sha }} on ${{ github.event.head_commit.message }}"
        files: hunchbank-project-${{ env.VERSION }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload artifact (optional fallback)
      uses: actions/upload-artifact@v4
      with:
        name: hunchbank-project-${{ github.sha }}
        path: hunchbank-project-${{ env.VERSION }}.zip
        retention-days: 30